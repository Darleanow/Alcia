name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        compiler: [gcc, clang, msvc]
        exclude:
          - os: windows-latest
            compiler: gcc
          - os: windows-latest
            compiler: clang
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1.11

      - name: Install dependencies
        run: |
          if [ ${{ matrix.os }} == 'ubuntu-latest' ]; then
            sudo apt-get update
            sudo apt-get install -y g++ lcov
          elif [ ${{ matrix.os }} == 'macos-latest' ]; then
            brew install llvm
          elif [ ${{ matrix.os }} == 'windows-latest' ]; then
            choco install visualstudio2019buildtools
            choco install llvm
          fi

      - name: Configure CMake
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -G Ninja

      - name: Build
        run: cmake --build build --config Debug

      - name: Run Tests
        run: ctest --test-dir build --output-on-failure

      - name: Generate Coverage Report
        if: matrix.compiler != 'msvc'
        run: |
          lcov --directory . --capture --output-file coverage.info
          lcov --remove coverage.info '/usr/*' --output-file coverage.info
          lcov --list coverage.info

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

  code_quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Cppcheck
        uses: actions/setup-cppcheck@v1

      - name: Run Cppcheck
        run: cppcheck --enable=all --inconclusive --std=c++23 --suppress=missingIncludeSystem .

name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1.11

      - name: Install dependencies
        run: |
          if [ ${{ matrix.os }} == 'ubuntu-latest' ]; then
            sudo apt-get update
            sudo apt-get install -y gcc g++ ninja-build lcov
          elif [ ${{ matrix.os }} == 'macos-latest' ]; then
            brew install gcc ninja lcov
          elif [ ${{ matrix.os }} == 'windows-latest' ]; then
            choco install ninja
            choco install gcc
          fi

      - name: Configure CMake
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -G Ninja

      - name: Build
        run: cmake --build build

      - name: Run Tests
        run: |
          cd build
          ctest --output-on-failure

      - name: Generate Coverage Report
        if: matrix.os != 'windows-latest'
        run: |
          cd build
          lcov --directory . --capture --output-file coverage.info
          lcov --remove coverage.info '/usr/*' --output-file coverage.info
          lcov --list coverage.info

      - name: Upload Coverage to Codecov
        if: matrix.os != 'windows-latest'
        uses: codecov/codecov-action@v3
        with:
          files: build/coverage.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
